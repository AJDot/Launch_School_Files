type: "MARKDOWN_NOTE"
folder: "8765d957a513c326f607"
title: "101 Programming Foundations Feedback"
content: '''
  ### **101 Programming Foundations Feedback**
  #### **What I Found Helpful**
  ##### **Preparation Techniques**
  What was most helpful to me was the preparation strategies and debugging tools discussed in lesson 2. Pseudo-code and flowcharts have been greatly beneficial me. When I work through a larger problem I find that I think more clearly when I take a little more time to write out a few lines of pseudo code first. This gives me the gist of the program and forces me to think about the main data structures I will need for the program. As Launch School has demonstrated clearly in the "Small Problems Exercises" section, the choice of an appropriate data structure to solve a particular problem can make a world of difference in the complexity and readability of a solution.
  
  I rarely have made a flow chart while working through course 101 and I didn't make a single one while working through the Small Problems Exercises. However, I do see their amazing potential for use on larger projects and I fully intend on utilizing them in future courses.
  ##### **Bonus Features**
  The bonus features sections for each of the walk-through programs were greatly beneficial for me. This gave me the chance to mimic coding styles and concepts on my own as well as develop some original code that messed well with the code built during the walk-through. For me, a walk-through only gives the perception that I have learned something. I don't truly know if I have learned something until I can used the material I think I've learned to construct something on my own. The bonus features do a good job of transitioning from Launch School holding my hand to me programming on my own.
  ##### **"What will this code do?" Questions**
  Being able to code is one thing. Being able to read code someone else has written and understand it is another. The exercises that ask what the following code will do were helpful for me. Again, Launch School is teaching not only how to code, but how to work with other coders. Nobody really codes alones, so reading others' work is essential.
  #### **What Didn't Work Well For Me**
  One section sticks out in my mind very well were the Problem Solving Videos in the Primer for the Small Problems Exercises. In the videos there were several distractions and I felt like the instructor jumped around a good bit. I just wasn't engaged in the material and was only waiting for it to be over.
  #### **How Well I Retained the Concepts**
  Well I won't know this until I take the 109 Assessment will I? But seriously, aside from taking the assessment soon, the Small Problems Exercises I imagine are there to see how much a student retains. For me, the majority of these problems were not difficult. While working these problems I would have ruby-docs open but I did not google and Stack Overflow for any help.
  #### **Which Parts Were Difficult**
  Strictly from course 101, nothing I can recall was difficult. The concept of mutating the called and the true meaning of a variable was puzzling for a while but by the end of the exercises I believe this concept is now clear.
  #### **Which Parts Were Easy**
  If something wasn't difficult then it was easy, right?
  
'''
tags: []
isStarred: false
createdAt: "2017-05-22T00:43:53.445Z"
updatedAt: "2017-05-22T00:46:02.242Z"
